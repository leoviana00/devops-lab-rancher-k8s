#jinja2: lstrip_blocks: "True", trim_blocks: "True"
#{{ ansible_managed }}

global
  daemon
  maxconn 20000
  master-worker
  pidfile /var/run/haproxy.pid
  stats socket /var/run/haproxy-runtime-api.sock level admin expose-fd listeners
  # stats socket /var/run/haproxy/info.sock  mode 666 level user
  # stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 1m
  log /dev/log local0
  log /dev/log    local1 notice
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3
  tune.ssl.default-dh-param 4096
  # server-state-file global
  # server-state-base /var/state/haproxy/

defaults
  log global
  log-format '%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs "%HM %[var(txn.base)] %HV"'
  option redispatch
  option dontlognull
  option http-keep-alive
  timeout http-request 5s
  timeout connect 3m
  timeout client  4h
  timeout queue 5s
  timeout server  4h
  timeout tunnel 1h
  timeout http-keep-alive 1m

frontend stats
  mode http
  bind *:81
  stats enable
  stats refresh 10s
  stats show-legends
  stats hide-version
  stats show-node
  stats uri /stats
  stats show-desc Lab Haproxy

frontend http
  mode http
  bind 0.0.0.0:80 name bind_1
  bind :::80 v4v6 name bind_2
  #bind *:443 ssl crt /etc/ssl/{{ambiente}}.pem
  http-request set-header X-Forwarded-Prodo https if { ssl_fc }
  http-request set-var(txn.host) req.hdr(Host),field(1,:),lower
  http-request set-var(txn.path) path
  http-request set-var(txn.base) base
{% include 'frontends/services-acls.cfg' %}


{% include 'backends/default-backends.cfg.j2' %}

{% include 'backends/services-backends.cfg' %}
