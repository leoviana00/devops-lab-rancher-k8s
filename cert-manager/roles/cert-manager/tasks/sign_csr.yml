#
# (c) Copyright 2019 Jeff Kight
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Ansible playbooks for CAs, CSRs and Certs
#
# Author: Jeff Kight <jeff@kight.net>
#
---

- name: Create the server certificate
  shell: >
    {{ openssl_cmd }} ca
    -config {{ ca_config }}
    -extensions server_cert
    -days {{ cert_duration }}
    -notext
    -md sha512
    -in ../../../{{ host_dir}}/{{ csr_cn }}.{{ host_csr_suffix }}
    -out ../../../{{ host_dir}}/{{ csr_cn }}.{{ host_cert_suffix }}
    -passin 'pass:{{ intermediate_passphrase }}'
    -batch
  args:
    chdir: "{{ tls_dir }}/{{ int_ca_dir }}"
    creates: "../../../{{ host_dir}}/{{ csr_cn }}.{{ host_cert_suffix }}"
  when:
    - cert_server | bool
    - not cert_client | bool

- name: Create the client certificate
  shell: >
    {{ openssl_cmd }} ca
    -config {{ ca_config }}
    -extensions usr_cert
    -days {{ cert_duration }}
    -notext
    -md sha512
    -in ../../../{{ host_dir}}/{{ csr_cn }}.{{ host_csr_suffix }}
    -out ../../../{{ host_dir}}/{{ csr_cn }}.{{ host_cert_suffix }}
    -passin 'pass:{{ intermediate_passphrase }}'
    -batch
  args:
    chdir: "{{ tls_dir }}/{{ int_ca_dir }}"
    creates: "../../../{{ host_dir}}/{{ csr_cn }}.{{ host_cert_suffix }}"
  when:
    - not cert_server | bool
    - cert_client | bool

- name: Create the server+client certificate
  shell: >
    {{ openssl_cmd }} ca
    -config {{ ca_config }}
    -extensions server_usr_cert
    -days {{ cert_duration }}
    -notext
    -md sha512
    -in ../../../{{ host_dir}}/{{ csr_cn }}.{{ host_csr_suffix }}
    -out ../../../{{ host_dir}}/{{ csr_cn }}.{{ host_cert_suffix }}
    -passin 'pass:{{ intermediate_passphrase }}'
    -batch
  args:
    chdir: "{{ tls_dir }}/{{ int_ca_dir }}"
    creates: "../../../{{ host_dir}}/{{ csr_cn }}.{{ host_cert_suffix }}"
  when:
    - cert_server | bool
    - cert_client | bool

- name: get cert
  shell: cat ../../../{{ host_dir}}/{{ csr_cn }}.{{ host_cert_suffix }}
  register: cert_result
  args:
    chdir: "{{ tls_dir }}/{{ int_ca_dir }}"

- name: output cert
  pause:
    seconds: 1
    prompt: |
      {{ cert_result.stdout }}
