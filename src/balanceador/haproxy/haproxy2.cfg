global
  maxconn 4096
  ssl-server-verify none

defaults
  mode http
  balance roundrobin
  option redispatch
  option forwardfor
  timeout connect 5s
  timeout queue 5s
  timeout client 36000s
  timeout server 36000s

listen  stats
  mode http
  bind *:81
  stats enable
  stats hide-version
  stats refresh 30s
  stats show-node
  stats auth admin:dev123
  stats uri  /stats
  stats show-desc Praticando Haproxy

listen kubernetes-apiserver-https
  bind *:6443
  mode tcp
  option log-health-checks
  timeout client 3h
  timeout server 3h
  balance roundrobin
  server k8s_m01 192.168.50.11:6443 check check-ssl verify none inter 2000
  # server k8s_m02 192.168.50.12:6443 check check-ssl verify none inter 2000

frontend kubernetes
  mode http
  bind 0.0.0.0:80
  # App echo para teste k8s
  acl dns_teste hdr(host) -i lab.k8s.rancher
  acl path_ws_teste path_beg -i /echo
  use_backend k8s_backend if dns_teste path_ws_teste

# Backend do app echo
backend k8s_backend
  mode http
  option forwardfor
  balance roundrobin
  server rr-1 192.168.50.41:32498 check 
  # server rr-2 192.168.50.42:30164 check 

# -------------------------------------------
#                  TESTES
# -------------------------------------------

# frontend www-https
#   bind *:443 ssl crt /etc/haproxy/rancher.pem
#   reqadd X-Forwarded-Proto:\ https
#   default_backend rancher-https

# backend rancher-https
#   mode http
#   option httpchk HEAD /healthz HTTP/1.0
#   server rancher 192.168.50.41:31292 check weight 1 maxconn 1024 ssl verify none

# frontend www-https
#   bind *:443 ssl crt /etc/haproxy/rancher.pem
#   mode tcp
#   option tcplog
#   tcp-request inspect-delay 5s
#   default_backend rancher-https

# backend rancher-https
#   mode tcp
#   balance roundrobin
#   source 0.0.0.0 usesrc client
#   server rancher 192.168.50.11:31292

# listen rancher
#   bind *:443 ssl crt /etc/haproxy/rancher.pem
#   mode tcp
  # http-request set-header X-Forwarded-Port %[dst_port]
  # http-request add-header X-Forwarded-Proto https if { ssl_fc }
  # reqadd X-Forwarded-Proto:\ https
  # server rancher 192.168.50.41:31292 check check-ssl verify none inter 2000


# frontend http-in
#   mode tcp
#   option tcplog
#   bind *:443 ssl crt /etc/haproxy/rancher.pem
#   default_backend rancher_servers

#   # Add headers for SSL offloading
#   http-request set-header X-Forwarded-Proto https if { ssl_fc }
#   http-request set-header X-Forwarded-Ssl on if { ssl_fc }

#   acl dns_teste hdr(host) -i lab.k8s.rancher
#   acl path_ws_rancher path_beg -i /rancher
#   use_backend k8s_backend if dns_teste path_ws_rancher

# backend rancher_servers
#   mode tcp
#   balance roundrobin
#   server rancher 192.168.50.41:31292 check 

## RANCHER
# listen rancher
#   bind *:443 ssl crt /etc/haproxy/rancher.pem
#   mode tcp
#   http-request set-header X-Forwarded-Port %[dst_port]
#   http-request add-header X-Forwarded-Proto https if { ssl_fc }
#   reqadd X-Forwarded-Proto:\ https
#   server rancher 192.168.50.41:31292 check verify none
