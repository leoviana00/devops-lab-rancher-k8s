global
  log /dev/log  local0
  log /dev/log  local1 notice
  chroot /var/lib/haproxy
  user haproxy
  group haproxy
  daemon

defaults
  log    global
  timeout connect 5000
  timeout client  50000
  timeout server  50000

listen  stats
  mode http
  bind *:81
  stats enable
  stats hide-version
  stats refresh 30s
  stats show-node
  stats auth admin:dev123
  stats uri  /stats
  stats show-desc Praticando Haproxy

# RANCHER
# frontend http-in
#   mode tcp
#   option tcplog
#   bind *:443 ssl crt /usr/local/etc/haproxy/rancher.pem
#   default_backend rancher_servers

#   # Add headers for SSL offloading
#   http-request set-header X-Forwarded-Proto https if { ssl_fc }
#   http-request set-header X-Forwarded-Ssl on if { ssl_fc }

#   acl dns_teste hdr(host) -i lab.k8s.rancher
#   acl path_ws_rancher path_beg -i /rancher
#   use_backend k8s_backend if dns_teste path_ws_rancher

# backend rancher_servers
#   mode tcp
#   balance roundrobin
#   server rancher 192.168.50.41:30496 check 

# Deu certo com node port
frontend www-https
  bind *:443 ssl crt /usr/local/etc/haproxy/rancher.pem
  reqadd X-Forwarded-Proto:\ https
  default_backend rancher-https

backend rancher-https
  mode http
  option httpchk HEAD /healthz HTTP/1.0
  server rancher 192.168.50.41:30496 check weight 1 maxconn 1024 ssl verify none
  # server rancher 192.168.50.41:31292 check weight 1 maxconn 1024 ssl verify none
  # server rancher 192.168.50.41:30779 check weight 1 maxconn 1024 ssl verify none

listen kubernetes-apiserver-https
  bind *:6443
  mode tcp
  option log-health-checks
  timeout client 3h
  timeout server 3h
  balance roundrobin
  server k8s_m01 192.168.50.11:6443 check check-ssl verify none inter 2000
  # server k8s_m02 192.168.50.12:6443 check check-ssl verify none inter 2000

frontend kubernetes
  mode http
  bind 0.0.0.0:80
  # App echo para teste k8s
  acl dns_teste hdr(host) -i lab.k8s.rancher
  acl path_ws_teste path_beg -i /echo
  use_backend k8s_backend if dns_teste path_ws_teste

# Backend do app echo
backend k8s_backend
  mode http
  option forwardfor
  balance roundrobin
  server rr-1 192.168.50.41:32498 check 
  # server rr-2 192.168.50.42:30164 check 

# frontend rancher
# 	bind *:443 ssl crt /etc/haproxy/rancher.pem
# 	mode			http
# 	log			global
# 	option			http-keep-alive
# 	option			forwardfor
# 	acl https ssl_fc
# 	http-request set-header		X-Forwarded-Proto http if !https
# 	http-request set-header		X-Forwarded-Proto https if https
# 	timeout client		30000
#   acl dns_teste hdr(host) -i lab.k8s.rancher
#   acl path_ws_rancher path_beg -i /rancher
#   use_backend k8s_backend if dns_teste path_ws_rancher

# backend rancher_servers
# 	mode			http
# 	log			global
# 	balance			roundrobin
# 	timeout connect		30000
# 	timeout server		30000
# 	retries			3
# 	option			httpchk GET /healthz
# 	option			forwardfor
# 	http-request set-header X-Forwarded-Host %[req.hdr(Host)]
# 	http-request set-header X-Forwarded-Port %[dst_port]
# 	server rancher 192.168.50.41:31292 check  
